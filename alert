import RPi.GPIO as GPIO
import Adafruit_DHT
import time
import serial

# Pins
SOUND_PIN = 17
MOISTURE_PIN = 27
BUZZER_PIN = 22
DHT_PIN = 4  # GPIO pin for DHT11

# DHT Sensor Type
DHT_SENSOR = Adafruit_DHT.DHT11

# Set thresholds
TEMP_HIGH = 38   # Celsius
TEMP_LOW = 20

# GPIO Setup
GPIO.setmode(GPIO.BCM)
GPIO.setup(SOUND_PIN, GPIO.IN)
GPIO.setup(MOISTURE_PIN, GPIO.IN)
GPIO.setup(BUZZER_PIN, GPIO.OUT)

# Optional: Setup GSM (SIM800L)
# Uncomment if using GSM
# gsm = serial.Serial("/dev/ttyS0", baudrate=9600, timeout=1)

def send_sms(message):
    # Send SMS using SIM800L
    gsm.write(b'AT\r')
    time.sleep(1)
    gsm.write(b'AT+CMGF=1\r')
    time.sleep(1)
    gsm.write(b'AT+CMGS="+918688542259"\r')  
    time.sleep(1)
    gsm.write(message.encode() + b"\r")
    gsm.write(bytes([26]))  # Ctrl+Z to send
    time.sleep(3)

def alert_buzzer(times=2):
    for _ in range(times):
        GPIO.output(BUZZER_PIN, GPIO.HIGH)
        time.sleep(0.3)
        GPIO.output(BUZZER_PIN, GPIO.LOW)
        time.sleep(0.3)

try:
    print("Smart Cradle Monitoring Started.")
    while True:
        # Cry detection
        if GPIO.input(SOUND_PIN) == GPIO.HIGH:
            print("🍼 Baby is crying!")
            alert_buzzer()
            # send_sms("Alert: Baby is crying!")

        # Diaper wet detection
        if GPIO.input(MOISTURE_PIN) == GPIO.LOW:  # LOW = Wet
            print("💧 Diaper is wet!")
            alert_buzzer()
            # send_sms("Alert: Diaper is wet!")

        # Temperature check
        humidity, temperature = Adafruit_DHT.read_retry(DHT_SENSOR, DHT_PIN)
        if humidity is not None and temperature is not None:
            print(f"🌡️ Temp: {temperature:.1f}°C, Humidity: {humidity:.1f}%")
            if temperature > TEMP_HIGH:
                print("🔥 Temperature too high!")
                alert_buzzer()
                # send_sms(f"Alert: High Temperature - {temperature:.1f}°C")
            elif temperature < TEMP_LOW:
                print("❄️ Temperature too low!")
                alert_buzzer()
                # send_sms(f"Alert: Low Temperature - {temperature:.1f}°C")
        else:
            print("DHT11 read failed.")

        time.sleep(2)

except KeyboardInterrupt:
    print("Exiting...")

finally:
    GPIO.cleanup()
